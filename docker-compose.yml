version: '3.8'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    volumes:
      - ${PWD}/db_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432

  web:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        HOST_ARG: ${HOST}
        API_PORT_ARG: ${API_PORT}
        HOSTNAME_ARG: db
        POSTGRES_PORT_ARG: 5432
        POSTGRES_DB_ARG: ${POSTGRES_DB}
        POSTGRES_USER_ARG: ${POSTGRES_USER}
        POSTGRES_PASSWORD_ARG: ${POSTGRES_PASSWORD}
        JWT_SECRET_ARG: ${JWT_SECRET}
        APP_MODULE_ARG: main:app
        WORKER_CLASS_ARG: uvicorn.workers.UvicornWorker
    environment:
      HOST: ${HOST}
      API_PORT: ${API_PORT}
      HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      APP_MODULE: main:app
      WORKER_CLASS: uvicorn.workers.UvicornWorker
    ports:
      - ${API_PORT}:${API_PORT}
      - 5435:5432
  
  verify:
    build:
      context: ./api_verify
      dockerfile: Dockerfile
      args:
        HOST_ARG: web
        API_PORT_ARG: ${API_PORT}
        API_NEW_USER_NAME_ARG: ${API_NEW_USER_NAME}
        API_NEW_USER_PASSWORD_ARG: ${API_NEW_USER_PASSWORD}
    environment:
      HOST: web
      API_PORT: ${API_PORT}
      API_NEW_USER_NAME: ${API_NEW_USER_NAME}
      API_NEW_USER_PASSWORD: ${API_NEW_USER_PASSWORD}

volumes:
     postgres_data:
